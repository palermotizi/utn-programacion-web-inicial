con el punto se selecciona UN SOLO elemento ejemplo
<h1 class="ejemplo1">hola</h1>
<h1 class="ejemplo2">hola</h1>
css:
h1 {
color: gray;
}este selecciona todos los h1

.ejemplo1 {
color: red;
} este selecciona una clase osea solo los elementos que tengan determinada clase especial


hay que tener cuidado con el orden y el efecto cascada. Puede tapar todos los css anteriores. Siempre hay que especificar una nueva propiedad cuando cambiamos de etiqueta. esto es de los elementos (0, 0, 1) tiene 1 de valor.

Con las class no pasa, no importa el orden. Por la especificidad (0, 1, 0) Tiene 10 de valor. Hace más referencia a algo mas especifico que el elemento.

selector de id: 
#nombre-del-id
Es más importante que el selector de elementos porque (1, 0, 0) tiene valor de 100. Es más específico, y es algo unico de unico uso. no se repite jamas.

ejemplo:
autos con 4 ruedas (etiqueta en gral.)
100 son rojos (class)
numero de patente (id)

puedo tener mas de una misma clase para varios elementos. 
el id es unico.

* selector universal de tooooodo el html pero es el que menos valor tiene. En la pirámide está abajo de todo. Se usa por ejemplo para poner una fuente. espacio a la derecha izquierda, etc. por convención se suele poner encima de todo.

inline style: estilo que se escribe en el mismo html. pero no sirve, era mala practica pero en la piramide está encima del id. tiene mas valor. se usa en html

!important: se utiliza en una propiedad. por ejemplo en css si voy a una etiqueta "color" y le pongo !important se cambia por encima de tooodo. Si pongo otro important mas abajo se tapa el  primer importan por efecto cascada. es malapractica usar esto. no deberia usarlo en el codigo pero hay un caso en particular que si usamos uan libreria como bootstrap (codigo de  otra persona) me da un codigo de css llenisimo de important, entonces en este caso deberiamos usar el important para tapar otro que ya este puesto y que no se puede borrar. No se borra el codigo de las librerias porque puede ser problematico.

no deberiamos utilizar mas que clase, elemento y selector universal. El id es rari, si podemos evitarlo mejor. Los demas son malas practicas.
         
                                             (malo)
                                           !important 
                                          inline style
                                               id
                                             class
                                           elementos
                                      selector universal
                                            (bueno)

para llamar a un archivo oswa importar 
de un css a otro para q funcione: 
Va en el principal con el nombre de hacia donde lo queremos importar 
@import url('./button.css'); <--- va en style.css y se dirige a button.css

@import url('../button.css'); hoja de estilos del index. 
el ../ se usa oara decir en que carpeta estoy y salir de esa carpeta.

_________________________________________________________________________________________________

rgb combinacion entre rojo verde azul (red, green, blue) rgba es para cambiar la opacidad del color.
tambien hay otros tipos para poner colores (#3892749)
no hay que aorenderse esto porque el diseñador lo da. Si hay que fijarse que tenga buen contraste.

para copoiar un color de otra pagina pongo inspect y copio el color. 
Colorpick eyedropper.  

fontsize puede ser en rem, em, px. ahora usamos px para fuentes

text decoration: type decoration -> color decoration -> estilo de decoration formita de linea: double, wavy, solid, dasher, etc. Puede ponerse en cualquier orden, el color no lo pongas primero

letter spacing: espaciado entre letras en unidad de medida como px negativo o positivo (-100 o 100) en logos, titulos grandes, porque los diseños suelen tener cambios en letter spacing. lo determina el diseñador
word spacing: espaciado entre palabras en unidad de medida como px negativo o positivo (-100 o 100) los mismos usos que el letter, con la fuente o asi. 

lineheight: espaciado entre lineas osea interlineado. Se usa mucho y cambia todo el tiempo. Por lo gral entre paginas web lo vemos. A todo esto lo pasa el diseñador. si no se especifica se deja por defecto.

fontweight: letra mas finita o mas gruesa. no todas las fuentes tienen soporte para esto. sube de 100 en 100 hasta el 900
fontfamily: fuentes que tienen soporte completo (de 100 a 900). Tiene segunda y tercer fuente por si no encuentra la primer fuente busca la segunda y si no lo encuentra pasa a la tercera

si trabajamos con muchos css y queremos importar la fuente:
para no poner siempre import font etc ponemos un css que contenga la fuente e importamos directamente en los demas css el archivo de estilos.

si aprendemos a usar variables es muchisimo mas facil

con el display: podemos cambair el estilo de elementos de block a inline o al reves.

div, header, footer, aside, nav, ul, ol, article, form, section, body, li [EN BLOQUE]
a, span, label, i, b, em (enfasis), strong (mas valor) [EN LINEA]

inline-block: permite ancho y alto y se alinea junto con otro.
img, inout, button, select, textarea, iframe, audio, video [INLINE-BLOCK]
